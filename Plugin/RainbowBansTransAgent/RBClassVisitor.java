package RainbowBansTransAgent;

import org.objectweb.asm.ClassVisitor;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

public class RBClassVisitor extends ClassVisitor implements Opcodes{	
	public RBClassVisitor(ClassVisitor c) {
		super(Opcodes.ASM5, c);
	}

	@Override
    public MethodVisitor visitMethod(int access, String name, String desc,
	    String signature, String[] exceptions) {
    	if(name.equals("checkIfShouldDisconnect")){
    		Logger.getLogger(false).logString("overwriting checkIfShouldDisconnect method with new code");
        	MethodVisitor mv = super.visitMethod(Opcodes.ACC_PUBLIC, "checkIfShouldDisconnect", "(Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;", null, null);
        	mv.visitCode();
        	Label l0 = new Label();
        	Label l1 = new Label();
        	Label l2 = new Label();
        	mv.visitTryCatchBlock(l0, l1, l2, "java/io/IOException");
        	Label l3 = new Label();
        	Label l4 = new Label();
        	Label l5 = new Label();
        	mv.visitTryCatchBlock(l3, l4, l5, "java/io/IOException");
        	Label l6 = new Label();
        	Label l7 = new Label();
        	Label l8 = new Label();
        	mv.visitTryCatchBlock(l6, l7, l8, "java/io/IOException");
        	Label l9 = new Label();
        	Label l10 = new Label();
        	Label l11 = new Label();
        	mv.visitTryCatchBlock(l9, l10, l11, "java/io/IOException");
        	Label l12 = new Label();
        	Label l13 = new Label();
        	Label l14 = new Label();
        	mv.visitTryCatchBlock(l12, l13, l14, "java/io/IOException");
        	Label l15 = new Label();
        	mv.visitLabel(l15);
        	mv.visitLineNumber(21, l15);
        	mv.visitVarInsn(ALOAD, 1);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "toString", "()Ljava/lang/String;", false);
        	mv.visitVarInsn(ALOAD, 1);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "toString", "()Ljava/lang/String;", false);
        	mv.visitIntInsn(BIPUSH, 47);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(I)I", false);
        	mv.visitInsn(ICONST_1);
        	mv.visitInsn(IADD);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(I)Ljava/lang/String;", false);
        	mv.visitVarInsn(ALOAD, 1);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "toString", "()Ljava/lang/String;", false);
        	mv.visitIntInsn(BIPUSH, 58);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(I)I", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(I)Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 3);
        	Label l16 = new Label();
        	mv.visitLabel(l16);
        	mv.visitLineNumber(22, l16);
        	mv.visitTypeInsn(NEW, "java/util/concurrent/ConcurrentHashMap");
        	mv.visitInsn(DUP);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/util/concurrent/ConcurrentHashMap", "<init>", "()V", false);
        	mv.visitVarInsn(ASTORE, 4);
        	Label l17 = new Label();
        	mv.visitLabel(l17);
        	mv.visitLineNumber(24, l17);
        	mv.visitFieldInsn(GETSTATIC, "joebkt/_JoeUtils", "DoReconnectDelay", "Z");
        	mv.visitJumpInsn(IFEQ, l3);
        	Label l18 = new Label();
        	mv.visitLabel(l18);
        	mv.visitLineNumber(26, l18);
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 5);
        	Label l19 = new Label();
        	mv.visitLabel(l19);
        	mv.visitLineNumber(27, l19);
        	mv.visitMethodInsn(INVOKESTATIC, "java/lang/System", "currentTimeMillis", "()J", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
        	mv.visitVarInsn(ASTORE, 6);
        	Label l20 = new Label();
        	mv.visitLabel(l20);
        	mv.visitLineNumber(28, l20);
        	mv.visitVarInsn(ALOAD, 4);
        	mv.visitVarInsn(ALOAD, 5);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/ConcurrentHashMap", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
        	mv.visitTypeInsn(CHECKCAST, "java/lang/Long");
        	mv.visitVarInsn(ASTORE, 7);
        	Label l21 = new Label();
        	mv.visitLabel(l21);
        	mv.visitLineNumber(29, l21);
        	mv.visitVarInsn(ALOAD, 7);
        	Label l22 = new Label();
        	mv.visitJumpInsn(IFNULL, l22);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false);
        	mv.visitVarInsn(ALOAD, 7);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false);
        	mv.visitInsn(LSUB);
        	mv.visitFieldInsn(GETSTATIC, "joebkt/_JoeUtils", "ReconnectDelaySeconds", "I");
        	mv.visitIntInsn(SIPUSH, 1000);
        	mv.visitInsn(IMUL);
        	mv.visitInsn(I2L);
        	mv.visitInsn(LCMP);
        	mv.visitJumpInsn(IFGE, l22);
        	Label l23 = new Label();
        	mv.visitLabel(l23);
        	mv.visitLineNumber(31, l23);
        	mv.visitFieldInsn(GETSTATIC, "joebkt/_JoeUtils", "DebugMode", "Z");
        	Label l24 = new Label();
        	mv.visitJumpInsn(IFEQ, l24);
        	Label l25 = new Label();
        	mv.visitLabel(l25);
        	mv.visitLineNumber(32, l25);
        	mv.visitLdcInsn("====== Delaying rejoin for ====== %s -- msDelta: %d ================");
        	mv.visitInsn(ICONST_2);
        	mv.visitTypeInsn(ANEWARRAY, "java/lang/Object");
        	mv.visitInsn(DUP);
        	mv.visitInsn(ICONST_0);
        	mv.visitVarInsn(ALOAD, 5);
        	mv.visitInsn(AASTORE);
        	mv.visitInsn(DUP);
        	mv.visitInsn(ICONST_1);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false);
        	mv.visitVarInsn(ALOAD, 7);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false);
        	mv.visitInsn(LSUB);
        	mv.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
        	mv.visitInsn(AASTORE);
        	mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "format", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "joebkt/_JoeUtils", "ConsoleMsg", "(Ljava/lang/String;)V", false);
        	mv.visitLabel(l24);
        	mv.visitLineNumber(34, l24);
        	mv.visitFrame(Opcodes.F_FULL, 8, new Object[] {"Testers/ClassToVisit", "java/net/SocketAddress", "com/mojang/authlib/GameProfile", "java/lang/String", "java/util/concurrent/ConcurrentHashMap", "java/lang/String", "java/lang/Long", "java/lang/Long"}, 0, new Object[] {});
        	mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        	mv.visitInsn(DUP);
        	mv.visitLdcInsn("There is a ");
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V", false);
        	mv.visitFieldInsn(GETSTATIC, "joebkt/_JoeUtils", "ReconnectDelaySeconds", "I");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
        	mv.visitLdcInsn("-second reconnect delay.");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        	mv.visitInsn(ARETURN);
        	mv.visitLabel(l22);
        	mv.visitLineNumber(36, l22);
        	mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
        	mv.visitVarInsn(ALOAD, 4);
        	mv.visitVarInsn(ALOAD, 5);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/ConcurrentHashMap", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
        	mv.visitInsn(POP);
        	mv.visitLabel(l3);
        	mv.visitLineNumber(39, l3);
        	mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitLdcInsn("[RainbowBansTransAgent] Starting I/O functions. Bad packets may occur");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l26 = new Label();
        	mv.visitLabel(l26);
        	mv.visitLineNumber(40, l26);
        	mv.visitTypeInsn(NEW, "java/lang/String");
        	mv.visitInsn(DUP);
        	mv.visitFieldInsn(GETSTATIC, "joebkt/PlayerList", "fileBannedPlayers", "Ljava/io/File;");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "toURI", "()Ljava/net/URI;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Paths", "get", "(Ljava/net/URI;)Ljava/nio/file/Path;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Files", "readAllBytes", "(Ljava/nio/file/Path;)[B", false);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/String", "<init>", "([B)V", false);
        	mv.visitVarInsn(ASTORE, 5);
        	Label l27 = new Label();
        	mv.visitLabel(l27);
        	mv.visitLineNumber(41, l27);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitLdcInsn("[RainbowBansTransAgent] received banned players 1/2");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l28 = new Label();
        	mv.visitLabel(l28);
        	mv.visitLineNumber(42, l28);
        	mv.visitVarInsn(ALOAD, 5);
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "contains", "(Ljava/lang/CharSequence;)Z", false);
        	Label l29 = new Label();
        	mv.visitJumpInsn(IFEQ, l29);
        	Label l30 = new Label();
        	mv.visitLabel(l30);
        	mv.visitLineNumber(43, l30);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        	mv.visitInsn(DUP);
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(Ljava/lang/Object;)Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V", false);
        	mv.visitLdcInsn(" is banned!");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l31 = new Label();
        	mv.visitLabel(l31);
        	mv.visitLineNumber(44, l31);
        	mv.visitTypeInsn(NEW, "java/io/File");
        	mv.visitInsn(DUP);
        	mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        	mv.visitInsn(DUP);
        	mv.visitLdcInsn("plugins_mod");
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V", false);
        	mv.visitFieldInsn(GETSTATIC, "java/io/File", "separator", "Ljava/lang/String;");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitLdcInsn("RainbowBans");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitFieldInsn(GETSTATIC, "java/io/File", "separator", "Ljava/lang/String;");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitLdcInsn("banmessage.txt");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/lang/String;)V", false);
        	mv.visitVarInsn(ASTORE, 6);
        	Label l32 = new Label();
        	mv.visitLabel(l32);
        	mv.visitLineNumber(45, l32);
        	mv.visitTypeInsn(NEW, "java/lang/String");
        	mv.visitInsn(DUP);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "toURI", "()Ljava/net/URI;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Paths", "get", "(Ljava/net/URI;)Ljava/nio/file/Path;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Files", "readAllBytes", "(Ljava/nio/file/Path;)[B", false);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/String", "<init>", "([B)V", false);
        	mv.visitVarInsn(ASTORE, 7);
        	Label l33 = new Label();
        	mv.visitLabel(l33);
        	mv.visitLineNumber(46, l33);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitLdcInsn("[RainbowBansTransAgent] Received ban message 2/2");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l34 = new Label();
        	mv.visitLabel(l34);
        	mv.visitLineNumber(48, l34);
        	mv.visitLdcInsn("Server");
        	mv.visitVarInsn(ASTORE, 8);
        	mv.visitLabel(l0);
        	mv.visitLineNumber(50, l0);
        	mv.visitFieldInsn(GETSTATIC, "joebkt/PlayerList", "fileBannedPlayers", "Ljava/io/File;");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "toURI", "()Ljava/net/URI;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Paths", "get", "(Ljava/net/URI;)Ljava/nio/file/Path;", false);
        	mv.visitVarInsn(ASTORE, 9);
        	Label l35 = new Label();
        	mv.visitLabel(l35);
        	mv.visitLineNumber(51, l35);
        	mv.visitVarInsn(ALOAD, 9);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Files", "readAllBytes", "(Ljava/nio/file/Path;)[B", false);
        	mv.visitVarInsn(ASTORE, 10);
        	Label l36 = new Label();
        	mv.visitLabel(l36);
        	mv.visitLineNumber(52, l36);
        	mv.visitTypeInsn(NEW, "java/lang/String");
        	mv.visitInsn(DUP);
        	mv.visitVarInsn(ALOAD, 10);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/String", "<init>", "([B)V", false);
        	mv.visitVarInsn(ASTORE, 11);
        	Label l37 = new Label();
        	mv.visitLabel(l37);
        	mv.visitLineNumber(53, l37);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitVarInsn(ALOAD, 11);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l38 = new Label();
        	mv.visitLabel(l38);
        	mv.visitLineNumber(54, l38);
        	mv.visitVarInsn(ALOAD, 11);
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(Ljava/lang/String;)I", false);
        	mv.visitVarInsn(ISTORE, 12);
        	Label l39 = new Label();
        	mv.visitLabel(l39);
        	mv.visitLineNumber(55, l39);
        	mv.visitVarInsn(ILOAD, 12);
        	Label l40 = new Label();
        	mv.visitJumpInsn(IFGE, l40);
        	Label l41 = new Label();
        	mv.visitLabel(l41);
        	mv.visitLineNumber(56, l41);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        	mv.visitInsn(DUP);
        	mv.visitLdcInsn("Could not find: ");
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V", false);
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l42 = new Label();
        	mv.visitLabel(l42);
        	mv.visitLineNumber(57, l42);
        	mv.visitLdcInsn("Unknown");
        	mv.visitVarInsn(ASTORE, 8);
        	mv.visitLabel(l40);
        	mv.visitLineNumber(59, l40);
        	mv.visitFrame(Opcodes.F_FULL, 13, new Object[] {"Testers/ClassToVisit", "java/net/SocketAddress", "com/mojang/authlib/GameProfile", "java/lang/String", "java/util/concurrent/ConcurrentHashMap", "java/lang/String", "java/io/File", "java/lang/String", "java/lang/String", "java/nio/file/Path", "[B", "java/lang/String", Opcodes.INTEGER}, 0, new Object[] {});
        	mv.visitVarInsn(ALOAD, 11);
        	mv.visitVarInsn(ILOAD, 12);
        	mv.visitVarInsn(ALOAD, 11);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 13);
        	Label l43 = new Label();
        	mv.visitLabel(l43);
        	mv.visitLineNumber(60, l43);
        	mv.visitVarInsn(ALOAD, 13);
        	mv.visitInsn(ICONST_0);
        	mv.visitVarInsn(ALOAD, 13);
        	mv.visitLdcInsn("expires");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(Ljava/lang/String;)I", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 14);
        	Label l44 = new Label();
        	mv.visitLabel(l44);
        	mv.visitLineNumber(61, l44);
        	mv.visitVarInsn(ALOAD, 13);
        	mv.visitVarInsn(ALOAD, 14);
        	mv.visitLdcInsn("source");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(Ljava/lang/String;)I", false);
        	mv.visitIntInsn(BIPUSH, 10);
        	mv.visitInsn(IADD);
        	mv.visitVarInsn(ALOAD, 14);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        	mv.visitIntInsn(BIPUSH, 8);
        	mv.visitInsn(ISUB);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 8);
        	mv.visitLabel(l1);
        	mv.visitLineNumber(62, l1);
        	Label l45 = new Label();
        	mv.visitJumpInsn(GOTO, l45);
        	mv.visitLabel(l2);
        	mv.visitFrame(Opcodes.F_FULL, 9, new Object[] {"Testers/ClassToVisit", "java/net/SocketAddress", "com/mojang/authlib/GameProfile", "java/lang/String", "java/util/concurrent/ConcurrentHashMap", "java/lang/String", "java/io/File", "java/lang/String", "java/lang/String"}, 1, new Object[] {"java/io/IOException"});
        	mv.visitVarInsn(ASTORE, 9);
        	Label l46 = new Label();
        	mv.visitLabel(l46);
        	mv.visitLineNumber(63, l46);
        	mv.visitVarInsn(ALOAD, 9);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        	mv.visitLabel(l45);
        	mv.visitLineNumber(65, l45);
        	mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
        	mv.visitVarInsn(ALOAD, 7);
        	mv.visitLdcInsn("%PLAYER%");
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "replaceAll", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
        	mv.visitLdcInsn("%REASON%");
        	mv.visitVarInsn(ALOAD, 8);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "replaceAll", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
        	mv.visitLdcInsn("%CURRENTTIME%");
        	mv.visitTypeInsn(NEW, "java/util/Date");
        	mv.visitInsn(DUP);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/util/Date", "<init>", "()V", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Date", "toString", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "replaceAll", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 9);
        	Label l47 = new Label();
        	mv.visitLabel(l47);
        	mv.visitLineNumber(66, l47);
        	mv.visitVarInsn(ALOAD, 9);
        	mv.visitLabel(l4);
        	mv.visitInsn(ARETURN);
        	mv.visitLabel(l5);
        	mv.visitLineNumber(68, l5);
        	mv.visitFrame(Opcodes.F_FULL, 5, new Object[] {"Testers/ClassToVisit", "java/net/SocketAddress", "com/mojang/authlib/GameProfile", "java/lang/String", "java/util/concurrent/ConcurrentHashMap"}, 1, new Object[] {"java/io/IOException"});
        	mv.visitVarInsn(ASTORE, 5);
        	Label l48 = new Label();
        	mv.visitLabel(l48);
        	mv.visitLineNumber(69, l48);
        	mv.visitVarInsn(ALOAD, 5);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        	mv.visitLabel(l29);
        	mv.visitLineNumber(71, l29);
        	mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
        	mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/server/MinecraftServer", "getServer", "()Lnet/minecraft/server/MinecraftServer;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/MinecraftServer", "getThePlayerList", "()Ljoebkt/PlayerList;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "joebkt/PlayerList", "getWhitelist", "()Z", false);
        	mv.visitVarInsn(ISTORE, 5);
        	Label l49 = new Label();
        	mv.visitLabel(l49);
        	mv.visitLineNumber(72, l49);
        	mv.visitVarInsn(ILOAD, 5);
        	mv.visitJumpInsn(IFEQ, l12);
        	Label l50 = new Label();
        	mv.visitLabel(l50);
        	mv.visitLineNumber(73, l50);
        	mv.visitInsn(ACONST_NULL);
        	mv.visitVarInsn(ASTORE, 6);
        	mv.visitLabel(l6);
        	mv.visitLineNumber(75, l6);
        	mv.visitTypeInsn(NEW, "java/lang/String");
        	mv.visitInsn(DUP);
        	mv.visitFieldInsn(GETSTATIC, "joebkt/PlayerList", "fileWhitelist", "Ljava/io/File;");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "toURI", "()Ljava/net/URI;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Paths", "get", "(Ljava/net/URI;)Ljava/nio/file/Path;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Files", "readAllBytes", "(Ljava/nio/file/Path;)[B", false);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/String", "<init>", "([B)V", false);
        	mv.visitVarInsn(ASTORE, 6);
        	mv.visitLabel(l7);
        	mv.visitLineNumber(76, l7);
        	Label l51 = new Label();
        	mv.visitJumpInsn(GOTO, l51);
        	mv.visitLabel(l8);
        	mv.visitFrame(Opcodes.F_FULL, 7, new Object[] {"Testers/ClassToVisit", "java/net/SocketAddress", "com/mojang/authlib/GameProfile", "java/lang/String", "java/util/concurrent/ConcurrentHashMap", Opcodes.INTEGER, "java/lang/String"}, 1, new Object[] {"java/io/IOException"});
        	mv.visitVarInsn(ASTORE, 7);
        	Label l52 = new Label();
        	mv.visitLabel(l52);
        	mv.visitLineNumber(77, l52);
        	mv.visitVarInsn(ALOAD, 7);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        	mv.visitLabel(l51);
        	mv.visitLineNumber(79, l51);
        	mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
        	mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/server/MinecraftServer", "getServer", "()Lnet/minecraft/server/MinecraftServer;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/MinecraftServer", "getThePlayerList", "()Ljoebkt/PlayerList;", false);
        	mv.visitVarInsn(ASTORE, 7);
        	Label l53 = new Label();
        	mv.visitLabel(l53);
        	mv.visitLineNumber(80, l53);
        	mv.visitVarInsn(ALOAD, 7);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "joebkt/PlayerList", "getWhitelist", "()Z", false);
        	mv.visitJumpInsn(IFEQ, l12);
        	Label l54 = new Label();
        	mv.visitLabel(l54);
        	mv.visitLineNumber(82, l54);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "contains", "(Ljava/lang/CharSequence;)Z", false);
        	mv.visitJumpInsn(IFNE, l12);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitVarInsn(ALOAD, 3);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "contains", "(Ljava/lang/CharSequence;)Z", false);
        	mv.visitJumpInsn(IFNE, l12);
        	Label l55 = new Label();
        	mv.visitLabel(l55);
        	mv.visitLineNumber(83, l55);
        	mv.visitLdcInsn("You are not whitelisted on this server!");
        	mv.visitInsn(ARETURN);
        	mv.visitLabel(l12);
        	mv.visitLineNumber(89, l12);
        	mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitLdcInsn("[RainbowBansTransAgent] Starting I/O functions. Bad packets may occur");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l56 = new Label();
        	mv.visitLabel(l56);
        	mv.visitLineNumber(90, l56);
        	mv.visitTypeInsn(NEW, "java/lang/String");
        	mv.visitInsn(DUP);
        	mv.visitFieldInsn(GETSTATIC, "joebkt/PlayerList", "fileBannedIPs", "Ljava/io/File;");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "toURI", "()Ljava/net/URI;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Paths", "get", "(Ljava/net/URI;)Ljava/nio/file/Path;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Files", "readAllBytes", "(Ljava/nio/file/Path;)[B", false);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/String", "<init>", "([B)V", false);
        	mv.visitVarInsn(ASTORE, 6);
        	Label l57 = new Label();
        	mv.visitLabel(l57);
        	mv.visitLineNumber(91, l57);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitLdcInsn("[RainbowBansTransAgent] received banned IPs 1/2");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l58 = new Label();
        	mv.visitLabel(l58);
        	mv.visitLineNumber(92, l58);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitVarInsn(ALOAD, 3);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "contains", "(Ljava/lang/CharSequence;)Z", false);
        	Label l59 = new Label();
        	mv.visitJumpInsn(IFEQ, l59);
        	Label l60 = new Label();
        	mv.visitLabel(l60);
        	mv.visitLineNumber(94, l60);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        	mv.visitInsn(DUP);
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(Ljava/lang/Object;)Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V", false);
        	mv.visitLdcInsn(" is banned!");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l61 = new Label();
        	mv.visitLabel(l61);
        	mv.visitLineNumber(95, l61);
        	mv.visitTypeInsn(NEW, "java/io/File");
        	mv.visitInsn(DUP);
        	mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        	mv.visitInsn(DUP);
        	mv.visitLdcInsn("plugins_mod");
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V", false);
        	mv.visitFieldInsn(GETSTATIC, "java/io/File", "separator", "Ljava/lang/String;");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitLdcInsn("RainbowBans");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitFieldInsn(GETSTATIC, "java/io/File", "separator", "Ljava/lang/String;");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitLdcInsn("banmessage.txt");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/io/File", "<init>", "(Ljava/lang/String;)V", false);
        	mv.visitVarInsn(ASTORE, 7);
        	Label l62 = new Label();
        	mv.visitLabel(l62);
        	mv.visitLineNumber(96, l62);
        	mv.visitTypeInsn(NEW, "java/lang/String");
        	mv.visitInsn(DUP);
        	mv.visitVarInsn(ALOAD, 7);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "toURI", "()Ljava/net/URI;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Paths", "get", "(Ljava/net/URI;)Ljava/nio/file/Path;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Files", "readAllBytes", "(Ljava/nio/file/Path;)[B", false);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/String", "<init>", "([B)V", false);
        	mv.visitVarInsn(ASTORE, 8);
        	Label l63 = new Label();
        	mv.visitLabel(l63);
        	mv.visitLineNumber(97, l63);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitLdcInsn("[RainbowBansTransAgent] Received ban message 2/2");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l64 = new Label();
        	mv.visitLabel(l64);
        	mv.visitLineNumber(99, l64);
        	mv.visitLdcInsn("Server");
        	mv.visitVarInsn(ASTORE, 9);
        	mv.visitLabel(l9);
        	mv.visitLineNumber(101, l9);
        	mv.visitFieldInsn(GETSTATIC, "joebkt/PlayerList", "fileBannedIPs", "Ljava/io/File;");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/File", "toURI", "()Ljava/net/URI;", false);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Paths", "get", "(Ljava/net/URI;)Ljava/nio/file/Path;", false);
        	mv.visitVarInsn(ASTORE, 10);
        	Label l65 = new Label();
        	mv.visitLabel(l65);
        	mv.visitLineNumber(102, l65);
        	mv.visitVarInsn(ALOAD, 10);
        	mv.visitMethodInsn(INVOKESTATIC, "java/nio/file/Files", "readAllBytes", "(Ljava/nio/file/Path;)[B", false);
        	mv.visitVarInsn(ASTORE, 11);
        	Label l66 = new Label();
        	mv.visitLabel(l66);
        	mv.visitLineNumber(103, l66);
        	mv.visitTypeInsn(NEW, "java/lang/String");
        	mv.visitInsn(DUP);
        	mv.visitVarInsn(ALOAD, 11);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/String", "<init>", "([B)V", false);
        	mv.visitVarInsn(ASTORE, 12);
        	Label l67 = new Label();
        	mv.visitLabel(l67);
        	mv.visitLineNumber(104, l67);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitVarInsn(ALOAD, 12);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l68 = new Label();
        	mv.visitLabel(l68);
        	mv.visitLineNumber(105, l68);
        	mv.visitVarInsn(ALOAD, 12);
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(Ljava/lang/String;)I", false);
        	mv.visitVarInsn(ISTORE, 13);
        	Label l69 = new Label();
        	mv.visitLabel(l69);
        	mv.visitLineNumber(106, l69);
        	mv.visitVarInsn(ILOAD, 13);
        	Label l70 = new Label();
        	mv.visitJumpInsn(IFGE, l70);
        	Label l71 = new Label();
        	mv.visitLabel(l71);
        	mv.visitLineNumber(107, l71);
        	mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
        	mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        	mv.visitInsn(DUP);
        	mv.visitLdcInsn("Could not find: ");
        	mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(Ljava/lang/String;)V", false);
        	mv.visitVarInsn(ALOAD, 3);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V", false);
        	Label l72 = new Label();
        	mv.visitLabel(l72);
        	mv.visitLineNumber(108, l72);
        	mv.visitLdcInsn("Unknown");
        	mv.visitVarInsn(ASTORE, 9);
        	mv.visitLabel(l70);
        	mv.visitLineNumber(110, l70);
        	mv.visitFrame(Opcodes.F_FULL, 14, new Object[] {"Testers/ClassToVisit", "java/net/SocketAddress", "com/mojang/authlib/GameProfile", "java/lang/String", "java/util/concurrent/ConcurrentHashMap", Opcodes.INTEGER, "java/lang/String", "java/io/File", "java/lang/String", "java/lang/String", "java/nio/file/Path", "[B", "java/lang/String", Opcodes.INTEGER}, 0, new Object[] {});
        	mv.visitVarInsn(ALOAD, 12);
        	mv.visitVarInsn(ILOAD, 13);
        	mv.visitVarInsn(ALOAD, 12);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 14);
        	Label l73 = new Label();
        	mv.visitLabel(l73);
        	mv.visitLineNumber(111, l73);
        	mv.visitVarInsn(ALOAD, 14);
        	mv.visitInsn(ICONST_0);
        	mv.visitVarInsn(ALOAD, 14);
        	mv.visitLdcInsn("expires");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(Ljava/lang/String;)I", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 15);
        	Label l74 = new Label();
        	mv.visitLabel(l74);
        	mv.visitLineNumber(112, l74);
        	mv.visitVarInsn(ALOAD, 14);
        	mv.visitVarInsn(ALOAD, 15);
        	mv.visitLdcInsn("source");
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "indexOf", "(Ljava/lang/String;)I", false);
        	mv.visitIntInsn(BIPUSH, 10);
        	mv.visitInsn(IADD);
        	mv.visitVarInsn(ALOAD, 15);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
        	mv.visitIntInsn(BIPUSH, 8);
        	mv.visitInsn(ISUB);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "substring", "(II)Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 9);
        	mv.visitLabel(l10);
        	mv.visitLineNumber(113, l10);
        	Label l75 = new Label();
        	mv.visitJumpInsn(GOTO, l75);
        	mv.visitLabel(l11);
        	mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"Testers/ClassToVisit", "java/net/SocketAddress", "com/mojang/authlib/GameProfile", "java/lang/String", "java/util/concurrent/ConcurrentHashMap", Opcodes.INTEGER, "java/lang/String", "java/io/File", "java/lang/String", "java/lang/String"}, 1, new Object[] {"java/io/IOException"});
        	mv.visitVarInsn(ASTORE, 10);
        	Label l76 = new Label();
        	mv.visitLabel(l76);
        	mv.visitLineNumber(114, l76);
        	mv.visitVarInsn(ALOAD, 10);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        	mv.visitLabel(l75);
        	mv.visitLineNumber(116, l75);
        	mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
        	mv.visitVarInsn(ALOAD, 8);
        	mv.visitLdcInsn("%PLAYER%");
        	mv.visitVarInsn(ALOAD, 2);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "com/mojang/authlib/GameProfile", "getName", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "replaceAll", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
        	mv.visitLdcInsn("%REASON%");
        	mv.visitVarInsn(ALOAD, 9);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "replaceAll", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
        	mv.visitLdcInsn("%CURRENTTIME%");
        	mv.visitTypeInsn(NEW, "java/util/Date");
        	mv.visitInsn(DUP);
        	mv.visitMethodInsn(INVOKESPECIAL, "java/util/Date", "<init>", "()V", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Date", "toString", "()Ljava/lang/String;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "replaceAll", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", false);
        	mv.visitVarInsn(ASTORE, 10);
        	Label l77 = new Label();
        	mv.visitLabel(l77);
        	mv.visitLineNumber(117, l77);
        	mv.visitVarInsn(ALOAD, 10);
        	mv.visitLabel(l13);
        	mv.visitInsn(ARETURN);
        	mv.visitLabel(l14);
        	mv.visitLineNumber(119, l14);
        	mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {"Testers/ClassToVisit", "java/net/SocketAddress", "com/mojang/authlib/GameProfile", "java/lang/String", "java/util/concurrent/ConcurrentHashMap", Opcodes.INTEGER}, 1, new Object[] {"java/io/IOException"});
        	mv.visitVarInsn(ASTORE, 6);
        	Label l78 = new Label();
        	mv.visitLabel(l78);
        	mv.visitLineNumber(120, l78);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/IOException", "printStackTrace", "()V", false);
        	mv.visitLabel(l59);
        	mv.visitLineNumber(122, l59);
        	mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
        	mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/server/MinecraftServer", "getServer", "()Lnet/minecraft/server/MinecraftServer;", false);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/MinecraftServer", "getThePlayerList", "()Ljoebkt/PlayerList;", false);
        	mv.visitVarInsn(ASTORE, 6);
        	Label l79 = new Label();
        	mv.visitLabel(l79);
        	mv.visitLineNumber(123, l79);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "joebkt/PlayerList", "getNumPlayers", "()I", false);
        	mv.visitVarInsn(ALOAD, 6);
        	mv.visitMethodInsn(INVOKEVIRTUAL, "joebkt/PlayerList", "getMaxPlayers", "()I", false);
        	Label l80 = new Label();
        	mv.visitJumpInsn(IF_ICMPLT, l80);
        	mv.visitLdcInsn("The server is full!");
        	Label l81 = new Label();
        	mv.visitJumpInsn(GOTO, l81);
        	mv.visitLabel(l80);
        	mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"joebkt/PlayerList"}, 0, null);
        	mv.visitInsn(ACONST_NULL);
        	mv.visitLabel(l81);
        	mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/String"});
        	mv.visitInsn(ARETURN);
        	Label l82 = new Label();
        	mv.visitLabel(l82);
        	mv.visitLocalVariable("this", "LTesters/ClassToVisit;", null, l15, l82, 0);
        	mv.visitLocalVariable("addr", "Ljava/net/SocketAddress;", null, l15, l82, 1);
        	mv.visitLocalVariable("profile", "Lcom/mojang/authlib/GameProfile;", null, l15, l82, 2);
        	mv.visitLocalVariable("ip", "Ljava/lang/String;", null, l16, l82, 3);
        	mv.visitLocalVariable("lastConnectTime", "Ljava/util/concurrent/ConcurrentHashMap;", "Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/String;Ljava/lang/Long;>;", l17, l82, 4);
        	mv.visitLocalVariable("pName", "Ljava/lang/String;", null, l19, l3, 5);
        	mv.visitLocalVariable("msNow", "Ljava/lang/Long;", null, l20, l3, 6);
        	mv.visitLocalVariable("msLast", "Ljava/lang/Long;", null, l21, l3, 7);
        	mv.visitLocalVariable("players", "Ljava/lang/String;", null, l27, l5, 5);
        	mv.visitLocalVariable("file", "Ljava/io/File;", null, l32, l5, 6);
        	mv.visitLocalVariable("reason", "Ljava/lang/String;", null, l33, l5, 7);
        	mv.visitLocalVariable("cause", "Ljava/lang/String;", null, l0, l5, 8);
        	mv.visitLocalVariable("path", "Ljava/nio/file/Path;", null, l35, l1, 9);
        	mv.visitLocalVariable("filebytes", "[B", null, l36, l1, 10);
        	mv.visitLocalVariable("ln", "Ljava/lang/String;", null, l37, l1, 11);
        	mv.visitLocalVariable("beginIndex", "I", null, l39, l1, 12);
        	mv.visitLocalVariable("plrln", "Ljava/lang/String;", null, l43, l1, 13);
        	mv.visitLocalVariable("searchline", "Ljava/lang/String;", null, l44, l1, 14);
        	mv.visitLocalVariable("e", "Ljava/io/IOException;", null, l46, l45, 9);
        	mv.visitLocalVariable("rep", "Ljava/lang/String;", null, l47, l5, 9);
        	mv.visitLocalVariable("e", "Ljava/io/IOException;", null, l48, l29, 5);
        	mv.visitLocalVariable("whitelist", "Z", null, l49, l82, 5);
        	mv.visitLocalVariable("whitelisters", "Ljava/lang/String;", null, l6, l12, 6);
        	mv.visitLocalVariable("e", "Ljava/io/IOException;", null, l52, l51, 7);
        	mv.visitLocalVariable("ls", "Ljoebkt/PlayerList;", null, l53, l12, 7);
        	mv.visitLocalVariable("ips", "Ljava/lang/String;", null, l57, l14, 6);
        	mv.visitLocalVariable("file", "Ljava/io/File;", null, l62, l14, 7);
        	mv.visitLocalVariable("reason", "Ljava/lang/String;", null, l63, l14, 8);
        	mv.visitLocalVariable("cause", "Ljava/lang/String;", null, l9, l14, 9);
        	mv.visitLocalVariable("path", "Ljava/nio/file/Path;", null, l65, l10, 10);
        	mv.visitLocalVariable("filebytes", "[B", null, l66, l10, 11);
        	mv.visitLocalVariable("ln", "Ljava/lang/String;", null, l67, l10, 12);
        	mv.visitLocalVariable("beginIndex", "I", null, l69, l10, 13);
        	mv.visitLocalVariable("plrln", "Ljava/lang/String;", null, l73, l10, 14);
        	mv.visitLocalVariable("searchline", "Ljava/lang/String;", null, l74, l10, 15);
        	mv.visitLocalVariable("e", "Ljava/io/IOException;", null, l76, l75, 10);
        	mv.visitLocalVariable("rep", "Ljava/lang/String;", null, l77, l14, 10);
        	mv.visitLocalVariable("e", "Ljava/io/IOException;", null, l78, l59, 6);
        	mv.visitLocalVariable("ls", "Ljoebkt/PlayerList;", null, l79, l82, 6);
        	mv.visitMaxs(8, 16);
        	mv.visitEnd();
        	Logger.getLogger(false).logString("reached the end!");
        	return null;
    	}else return cv.visitMethod(access, name, desc, signature, exceptions);	
    }
	
}
